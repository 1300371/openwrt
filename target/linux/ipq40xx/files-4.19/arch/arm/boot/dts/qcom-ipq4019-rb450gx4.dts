/* Copyright (c) 2015, The Linux Foundation. All rights reserved.
 * Copyright (c) 2019, Robert Marko <robimarko@gmail.com>
 *
 * Permission to use, copy, modify, and/or distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 */

#include "qcom-ipq4019.dtsi"
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/input/input.h>
#include <dt-bindings/soc/qcom,tcsr.h>

/ {
	model = "Mikrotik RB450Gx4";
	compatible = "mikrotik,rb450gx4";

	memory {
		device_type = "memory";
		reg = <0x80000000 0x40000000>;
	};

	chosen {
		stdout-path = "serial0:115200n8";
	};

	aliases {
		led-boot = &user;
		led-failsafe = &user;
		led-running = &user;
		led-upgrade = &user;
	};

	soc {
		rng@22000 {
			status = "okay";
		};

		mdio@90000 {
			status = "okay";
			pinctrl-0 = <&mdio_pins>;
			pinctrl-names = "default";
		};

		ess-psgmii@98000 {
			status = "disabled";
		};

		counter@4a1000 {
			compatible = "qcom,qca-gcnt";
			reg = <0x4a1000 0x4>;
		};

		tcsr@1949000 {
			compatible = "qcom,tcsr";
			reg = <0x1949000 0x100>;
			qcom,wifi_glb_cfg = <TCSR_WIFI_GLB_CFG>;
		};

		tcsr@194b000 {
			/* select hostmode */
			compatible = "qcom,tcsr";
			reg = <0x194b000 0x100>;
			qcom,usb-hsphy-mode-select = <TCSR_USB_HSPHY_HOST_MODE>;
			status = "okay";
		};

		ess_tcsr@1953000 {
			compatible = "qcom,tcsr";
			reg = <0x1953000 0x1000>;
			qcom,ess-interface-select = <TCSR_ESS_PSGMII>;
		};

		tcsr@1957000 {
			compatible = "qcom,tcsr";
			reg = <0x1957000 0x100>;
			qcom,wifi_noc_memtype_m0_m2 = <TCSR_WIFI_NOC_MEMTYPE_M0_M2>;
		};

		usb2: usb2@60f8800 {
			status = "okay";
		};

		serial@78af000 {
			pinctrl-0 = <&serial_pins>;
			pinctrl-names = "default";
			status = "okay";
		};

		usb3: usb3@8af8800 {
			status = "okay";
		};

		crypto@8e3a000 {
			status = "okay";
		};

		watchdog@b017000 {
			status = "okay";
		};

		vccq_sd0: regulator@0 {
			compatible = "qcom,regulator-ipq4019";
			regulator-name = "SD0 VccQ";
			regulator-min-microvolt = <1800000>;
			regulator-max-microvolt = <3000000>;
			states = <3000000 0x3
					  1800000 0x1>;
			reg = <0x01948000 0x4>;
			mask = <0x3>;
			status = "disabled";
		};

		sdhci@7824000 {
			compatible = "qcom,sdhci-msm-v4";
			reg = <0x7824900 0x11c>, <0x7824000 0x800>;
			interrupts = <0 123 0>, <0 138 0>;
			interrupt-names = "hc_irq", "pwr_irq";
			bus-width = <8>;
			clocks = <&gcc GCC_SDCC1_APPS_CLK>, <&gcc GCC_SDCC1_AHB_CLK>, <&xo>;
			clock-names = "core", "iface", "xo";
			vqmmc-supply = <&vccq_sd0>;
			cd-gpios = <&tlmm 22 GPIO_ACTIVE_LOW>;
			sd-ldo-gpios = <&tlmm 33 GPIO_ACTIVE_LOW>;
			status = "disabled";
		};

		ess-switch@c000000 {
			status = "disabled";
		};

		edma@c080000 {
			status = "disabled";
			qcom,num_gmac = <1>;
		};
	};

	/*gpio-export {
		compatible = "gpio-export";

		gpio_poe_out {
			gpio-export,name = "rb450gx4:sd:ldo";
			gpio-export,output = <1>;
			gpios = <&tlmm 33 GPIO_ACTIVE_HIGH>;
		};
	};*/

	gpio-keys {
		compatible = "gpio-keys";

		reset {
			label = "reset";
			gpios = <&tlmm 5 GPIO_ACTIVE_HIGH>;
			linux,code = <KEY_RESTART >;
		};
	};

	leds {
		compatible = "gpio-leds";

		power: power {
			label = "rb450gx4:blue:power";
			gpios = <&tlmm 0 GPIO_ACTIVE_HIGH>;
			default-state = "keep";
			panic-indicator;
		};

		user: user {
			label = "rb450gx4:green:user";
			gpios = <&tlmm 3 GPIO_ACTIVE_HIGH>;
		};
	};

	beeper: beeper {
			compatible = "gpio-beeper";
			gpios = <&tlmm 2 GPIO_ACTIVE_HIGH>;
	};
};


&tlmm {
	serial_pins: serial_pinmux {
		mux {
			pins = "gpio16", "gpio17";
			function = "blsp_uart0";
			bias-disable;
		};
	};

	spi_0_pins: spi-0-pinmux {
					pinmux {
						function = "blsp_spi0";
						pins = "gpio13", "gpio14", "gpio15";
						bias-disable;
					};
					pinmux_cs {
						function = "gpio";
						pins = "gpio12";
						bias-disable;
						output-high;
					};
				};

	mdio_pins: mdio_pinmux {
		mux_1 {
			pins = "gpio53";
			function = "mdio";
			bias-pull-up;
		};
		mux_2 {
			pins = "gpio52";
			function = "mdc";
			bias-pull-up;
		};
	};

	/*nand_pins: nand_pins {

		pullups {
			pins = "gpio52", "gpio53", "gpio58",
				"gpio59";
			function = "qpic";
			bias-pull-up;
		};

		pulldowns {
			pins = "gpio54", "gpio55", "gpio56",
				"gpio57", "gpio60", "gpio61",
				"gpio62", "gpio63", "gpio64",
				"gpio65", "gpio66", "gpio67",
				"gpio68", "gpio69";
			function = "qpic";
			bias-pull-down;
		};
	};*/
};

&blsp_dma {
	status = "okay";
};

&blsp1_spi1 {
	pinctrl-0 = <&spi_0_pins>;
	pinctrl-names = "default";
	cs-gpios = <&tlmm 12 GPIO_ACTIVE_HIGH>;
	status = "okay";

	m25p80@0 {
		reg = <0>;
		compatible = "jedec,spi-nor";
		spi-max-frequency = <24000000>;

		partitions {
			compatible = "fixed-partitions";
			#address-cells = <1>;
			#size-cells = <1>;

			partition0@0 {
				label = "RouterBoot";
				reg = <0x00080000 0x000c0000>;
				read-only;
			};
		};
	};
};

&cryptobam {
	status = "okay";
};

&nand {
	//pinctrl-0 = <&nand_pins>;
	pinctrl-names = "default";
	status = "okay";

	nand@0 {
		partitions {
			compatible = "fixed-partitions";
			#address-cells = <1>;
			#size-cells = <1>;

			partition@0 {
				label = "ubi";
				reg = <0x00000000 0x20000000>;
			};
		};
	};
};

&qpic_bam {
	status = "okay";
};

