From ebb4d06a95be89797591e29a37b831f0c13c7447 Mon Sep 17 00:00:00 2001
From: Robert Marko <robimarko@gmail.com>
Date: Wed, 6 Mar 2019 20:56:22 +0100
Subject: [PATCH] ipq4019: Add PCI-E probe retry

Signed-off-by: Robert Marko <robimarko@gmail.com>
---
 pcie-qcom.c | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

diff --git a/drivers/pci/controller/dwc/pcie-qcom.c b/drivers/pci/controller/dwc/pcie-qcom.c
index 4352c1c..84dabc6 100644
--- a/drivers/pci/controller/dwc/pcie-qcom.c
+++ b/drivers/pci/controller/dwc/pcie-qcom.c
@@ -165,6 +165,7 @@ struct qcom_pcie {
 	union qcom_pcie_resources res;
 	struct phy *phy;
 	struct gpio_desc *reset;
+	struct gpio_desc *booster;
 	const struct qcom_pcie_ops *ops;
 };
 
@@ -1088,6 +1089,7 @@ static int qcom_pcie_host_init(struct pcie_port *pp)
 	struct dw_pcie *pci = to_dw_pcie_from_pp(pp);
 	struct qcom_pcie *pcie = to_qcom_pcie(pci);
 	int ret;
+	int retries = 0;
 
 	pm_runtime_get_sync(pci->dev);
 	qcom_ep_reset_assert(pcie);
@@ -1113,9 +1115,22 @@ static int qcom_pcie_host_init(struct pcie_port *pp)
 
 	qcom_ep_reset_deassert(pcie);
 
-	ret = qcom_pcie_establish_link(pcie);
-	if (ret)
-		goto err;
+	do{
+		ret = qcom_pcie_establish_link(pcie);
+		if(!ret){
+			break;
+		}else{
+			qcom_ep_reset_assert(pcie);
+			usleep_range(1000, 1005);
+			qcom_ep_reset_deassert(pcie);
+			usleep_range(20000, 25000);
+			retries++;
+			if(retries == 5){
+				gpiod_direction_output(pcie->booster, 1);
+			}
+		}
+	}while(retries <= 15);
+	gpiod_direction_output(pcie->booster, 0);
 
 	return 0;
 err:
@@ -1228,6 +1243,10 @@ static int qcom_pcie_probe(struct platform_device *pdev)
 	if (IS_ERR(pcie->reset))
 		return PTR_ERR(pcie->reset);
 
+	pcie->booster = devm_gpiod_get_optional(dev, "booster", GPIOD_OUT_LOW);
+	if (IS_ERR(pcie->booster))
+		return PTR_ERR(pcie->booster);
+
 	res = platform_get_resource_byname(pdev, IORESOURCE_MEM, "parf");
 	pcie->parf = devm_ioremap_resource(dev, res);
 	if (IS_ERR(pcie->parf))
-- 
2.20.1